{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport swal from 'sweetalert2';\nimport Swal from 'sweetalert2';\nexport let OrdentrabajoService = class OrdentrabajoService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.baseUrl = 'http://localhost:8080/api/v1/ordenes-trabajos';\n    this.httpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n  }\n  //Metodo para los errores y execepciones\n  handleError(error) {\n    console.error(error);\n    swal.fire(error.mensaje, error.error, 'error');\n    return throwError(error);\n  }\n  // listar Ordenes de Trabajos\n  listarOrdenes() {\n    return this.http.get(this.baseUrl).pipe(catchError(this.handleError));\n  }\n  //listar Ordenes de Trabajos por ID\n  listarOrden(id) {\n    return this.http.get(`${this.baseUrl}/${id}`).pipe(catchError(e => {\n      this.router.navigate(['/cliente']);\n      console.error(e.error.mensaje);\n      Swal.fire('Error al editar', e.error.mensaje, 'error');\n      return throwError(e);\n    }), map(orden => {\n      orden.no_ordent = orden.no_ordent;\n      // Realiza cualquier otra modificación necesaria en los campos del cliente aquí\n      return orden;\n    }));\n  }\n  //Creacion de Ordenes de Trabajo\n  create(ordenTrabajo) {\n    return this.http.post(this.baseUrl, ordenTrabajo, {\n      headers: this.httpHeaders\n    }).pipe(catchError(this.handleError));\n  }\n  //Actualizar Ordenes por ID\n  update(id, ordenTrabajo) {\n    const url = `${this.baseUrl}/${id}`;\n    return this.http.put(url, ordenTrabajo, {\n      headers: this.httpHeaders\n    }).pipe(catchError(this.handleError));\n  }\n  //Imprimir Ordenes\n  exportPdf(ordenTrabajo) {\n    const url = `${this.baseUrl}(\"/export-pdf-orden-trabajo\")`;\n    return this.http.get(url, {\n      headers: this.httpHeaders,\n      responseType: 'blob'\n    }).pipe(catchError(this.handleError));\n  }\n};\nOrdentrabajoService = __decorate([Injectable({\n  providedIn: 'root'\n})], OrdentrabajoService);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}