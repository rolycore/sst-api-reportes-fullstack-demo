{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../_services/resetpassword.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ResetpasswordComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.message, \" \");\n  }\n}\nfunction ResetpasswordComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Fallo el envio: \", ctx_r1.errorMessage, \" \");\n  }\n}\nexport let ResetpasswordComponent = /*#__PURE__*/(() => {\n  var _class;\n  class ResetpasswordComponent {\n    constructor(http, reset, route, router) {\n      this.http = http;\n      this.reset = reset;\n      this.route = route;\n      this.router = router;\n      this.email = '';\n      this.message = '';\n      this.isSend = false;\n      this.isSendFailed = false;\n      this.errorMessage = '';\n      this.newPassword = '';\n    }\n    onSubmit() {\n      const token = this.route.snapshot.queryParamMap.get('token');\n      if (token !== null) {\n        // Ahora token tiene un valor no nulo\n        this.reset.resetPassword(token, this.newPassword).subscribe(response => {\n          // Contraseña restablecida con éxito, redirige a la página de inicio de sesión\n          this.router.navigate(['/login']);\n        }, error => {\n          // Maneja errores aquí\n          console.error(error);\n        });\n      } else {\n        // Manejar el caso en que token es nulo\n        console.error('Token es nulo');\n      }\n    }\n  }\n  _class = ResetpasswordComponent;\n  _class.ɵfac = function ResetpasswordComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.ResetpasswordService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-resetpassword\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[1, \"col-md-12\"], [1, \"card\", \"card-container\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"alert\", \"alert-success\"], [1, \"alert\", \"alert-danger\"]],\n    template: function ResetpasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Restablecer Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"submit\", function ResetpasswordComponent_Template_form_submit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Nueva Contrase\\u00F1a:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ResetpasswordComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.newPassword = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵtext(10, \"Restablecer Contrase\\u00F1a\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, ResetpasswordComponent_div_11_Template, 2, 1, \"div\", 7);\n        i0.ɵɵtemplate(12, ResetpasswordComponent_div_12_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.newPassword);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSend);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSendFailed);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm]\n  });\n  return ResetpasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}