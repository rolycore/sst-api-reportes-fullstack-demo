{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../_services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ResetpasswordComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Fallo el envio: \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction ResetpasswordComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.message, \" \");\n  }\n}\nexport let ResetpasswordComponent = /*#__PURE__*/(() => {\n  var _class;\n  class ResetpasswordComponent {\n    constructor(http, reset, route, router) {\n      this.http = http;\n      this.reset = reset;\n      this.route = route;\n      this.router = router;\n      this.email = '';\n      this.message = '';\n      this.isSuccessful = false;\n      this.isResetFailed = false;\n      this.submitted = false;\n      this.errorMessage = '';\n      this.newPassword = '';\n    }\n    onSubmit() {\n      this.reset.resetPassword(this.email, this.newPassword).subscribe(response => {\n        // Manejar la respuesta exitosa, por ejemplo, mostrar un mensaje de éxito\n        Swal.fire('Restablecer Contraseña', `Contraseña restablecida con éxito!`, 'success');\n        this.message = 'Password reset successfully!';\n        console.log('Contraseña restablecida con éxito', response);\n        this.isSuccessful = true;\n        this.submitted = true; // Establece submitted en true cuando el formulario se envía\n        this.isResetFailed = false;\n        this.router.navigate(['login']);\n      }, error => {\n        // Manejar errores, por ejemplo, mostrar un mensaje de error\n        console.error('Error al restablecer la contraseña', error);\n        this.errorMessage = error.error.message;\n        this.isResetFailed = true;\n      });\n    }\n  }\n  _class = ResetpasswordComponent;\n  _class.ɵfac = function ResetpasswordComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-resetpassword\"]],\n    decls: 17,\n    vars: 4,\n    consts: [[1, \"col-md-12\"], [1, \"card\", \"card-container\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"]],\n    template: function ResetpasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n        i0.ɵɵtext(3, \"Restablecer Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ResetpasswordComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Correo Electr\\u00F3nico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ResetpasswordComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Nueva Contrase\\u00F1a:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function ResetpasswordComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.newPassword = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵtext(14, \"Restablecer Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, ResetpasswordComponent_div_15_Template, 2, 1, \"div\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, ResetpasswordComponent_div_16_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newPassword);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.submitted && ctx.isResetFailed);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isSuccessful);\n      }\n    },\n    dependencies: [i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm]\n  });\n  return ResetpasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}