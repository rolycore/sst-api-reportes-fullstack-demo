{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./media.service\";\nexport let EquipoclienteService = /*#__PURE__*/(() => {\n  var _class;\n  class EquipoclienteService {\n    constructor(http, router, uploadImagen) {\n      this.http = http;\n      this.router = router;\n      this.uploadImagen = uploadImagen;\n      this.baseUrl = 'https://localhost:8080/api/v1/equipos-clientes'; // http://62.72.24.222:8080/api/v1/equipos-clientesReemplaza con la URL de tu backend\n      this.httpHeaders = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      this.httpHeadersMultipart = new HttpHeaders({\n        'Content-Type': 'multipart/form-data'\n      });\n      this.headersBoundary = new HttpHeaders({\n        'Content-Type': 'multipart/form-data; boundary=---------------------------1234567890'\n      });\n    }\n    //Metodo para los errores y execepciones\n    handleError(error) {\n      if (error.error instanceof ErrorEvent) {\n        console.error('Error del cliente:', error.error.message);\n      } else {\n        console.error(`Código de error: ${error.status}, ` + `Error: ${error.error}`);\n      }\n      return throwError('Ocurrió un error. Por favor, inténtalo de nuevo más tarde.');\n    }\n    //Metodo get que muestra todos los equiposclientes\n    findAllEquipos() {\n      return this.http.get(this.baseUrl).pipe(catchError(this.handleError));\n    }\n    // Método para crear un equipo con o sin imagen\n    createEquipo(equipo) {\n      return this.http.post(this.baseUrl, equipo, {\n        headers: this.httpHeaders\n      }).pipe(catchError(e => {\n        if (e.status == 400) {\n          return throwError(e);\n        }\n        console.error(e.error.mensaje);\n        Swal.fire(e.error.mensaje, e.error.error, 'error');\n        return throwError(e);\n      }), map(response => {\n        if (response === null) {\n          this.router.navigate(['/equipocliente']);\n          throw new Error('Null response received');\n        }\n        return response;\n      }));\n    }\n    //Bucar por ID\n    getEquipo(id) {\n      return this.http.get(`${this.baseUrl}/${id}`).pipe(catchError(e => {\n        this.router.navigate(['/equipocliente']);\n        console.error(e.error.mensaje);\n        Swal.fire('Error al editar', e.error.mensaje, 'error');\n        return throwError(e);\n      }), map(equipo => {\n        equipo.nombre = equipo.nombre.toUpperCase();\n        // equipo.categoria_equipo = equipo.categoria_equipo.toUpperCase();\n        // Realiza cualquier otra modificación necesaria en los campos del cliente aquí\n        return equipo;\n      }));\n    }\n    //Actualizar Equipo por ID\n    update(equipo) {\n      return this.http.put(`${this.baseUrl}/${equipo.idEquipo}`, equipo, {\n        headers: this.httpHeaders\n      }).pipe(catchError(e => {\n        if (e.status == 400) {\n          return throwError(e);\n        }\n        this.router.navigate(['/equipocliente']);\n        console.error(e.error.mensaje);\n        Swal.fire(e.error.mensaje, e.error.error, 'error');\n        return throwError(e);\n      }));\n    }\n    //Borrar Equipo\n    delete(id) {\n      const url = `${this.baseUrl}/${id}`;\n      return this.http.delete(url, {\n        headers: this.headersBoundary\n      }).pipe(catchError(this.handleError));\n    }\n    //Impoirtar Equipos\n    importarEquipos(archivo) {\n      const formData = new FormData();\n      formData.append('archivo', archivo);\n      return this.http.post(`${this.baseUrl}/importar`, formData);\n    }\n    //Exportar Clientes\n    exportarEquipos() {\n      const headers = new HttpHeaders({\n        'Accept': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      });\n      return this.http.get(`${this.baseUrl}/exportar`, {\n        responseType: 'blob',\n        headers\n      }).pipe(catchError(this.handleError));\n    }\n  }\n  _class = EquipoclienteService;\n  _class.ɵfac = function EquipoclienteService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.MediaService));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return EquipoclienteService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}