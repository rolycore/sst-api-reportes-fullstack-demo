{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { trigger, transition, style, animate } from '@angular/animations'; // Importa las animaciones\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"../_services/token-storage.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_form_3_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Username is required! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_3_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_3_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" Password must be at least 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_3_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const role_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", role_r8);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r8);\n  }\n}\nfunction LoginComponent_form_3_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵtext(1, \" Role is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_form_3_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Error de inicio de sesion: \", ctx_r7.errorMessage, \" \");\n  }\n}\nfunction LoginComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 6)(2, \"label\", 7);\n    i0.ɵɵtext(3, \"Username\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 8);\n    i0.ɵɵtemplate(5, LoginComponent_form_3_div_5_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"label\", 10);\n    i0.ɵɵtext(8, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 11);\n    i0.ɵɵelementStart(10, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function LoginComponent_form_3_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.toggleShowPassword());\n    });\n    i0.ɵɵtext(11, \"Mostrar/Ocultar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, LoginComponent_form_3_div_12_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(13, LoginComponent_form_3_div_13_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 6)(15, \"label\", 13);\n    i0.ɵɵtext(16, \"Role\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"select\", 14)(18, \"option\", 15);\n    i0.ɵɵtext(19, \"Selecciona un role\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, LoginComponent_form_3_option_20_Template, 2, 2, \"option\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, LoginComponent_form_3_div_21_Template, 2, 0, \"div\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 6)(23, \"button\", 18);\n    i0.ɵɵtext(24, \"Ingresar\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(25, LoginComponent_form_3_div_25_Template, 3, 1, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_6_0;\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.loginForm);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r0.loginForm.get(\"username\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx_r0.loginForm.get(\"username\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"type\", ctx_r0.showPassword ? \"text\" : \"password\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r0.loginForm.get(\"password\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx_r0.loginForm.get(\"password\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r0.loginForm.get(\"password\")) == null ? null : tmp_4_0.hasError(\"minlength\")) && ((tmp_4_0 = ctx_r0.loginForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.roles);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_6_0 = ctx_r0.loginForm.get(\"role\")) == null ? null : tmp_6_0.hasError(\"required\")) && ((tmp_6_0 = ctx_r0.loginForm.get(\"role\")) == null ? null : tmp_6_0.touched));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isLoginFailed);\n  }\n}\nfunction LoginComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"p\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\u00A1Bienvenido, \", ctx_r1.username, \"!\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Haz Conectado como \", ctx_r1.selectedRole, \". \");\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  var _class;\n  class LoginComponent {\n    toggleShowPassword() {\n      this.showPassword = !this.showPassword;\n    }\n    constructor(authService, tokenStorage, fb, router, activateRoute) {\n      this.authService = authService;\n      this.tokenStorage = tokenStorage;\n      this.fb = fb;\n      this.router = router;\n      this.activateRoute = activateRoute;\n      this.isLoggedIn = false;\n      this.isLoginFailed = false;\n      this.errorMessage = '';\n      this.roles = ['ROLE_ADMIN', 'ROLE_MODERATOR', 'ROLE_USER'];\n      this.selectedRole = ''; // Variable para almacenar el rol seleccionado\n      this.password = '';\n      this.showPassword = false;\n      this.loginForm = this.fb.group({\n        username: ['', Validators.required],\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        role: ['', Validators.required]\n      });\n    }\n    ngOnInit() {}\n    onSubmit() {\n      if (this.loginForm.invalid) {\n        return;\n      }\n      if (this.tokenStorage.getToken()) {\n        this.isLoggedIn = true;\n      }\n      const {\n        username,\n        password\n      } = this.loginForm.value;\n      this.selectedRole = this.loginForm.get('role')?.value; // Actualizar selectedRole con el valor del campo role\n      this.username = this.loginForm.get('username')?.value;\n      this.password = this.loginForm.get('password')?.value;\n      this.authService.login(username, password).subscribe(data => {\n        this.isLoggedIn = true;\n        this.isLoginFailed = false;\n        this.errorMessage = '';\n        this.tokenStorage.saveToken(data.accessToken);\n        this.tokenStorage.saveUser(data);\n        this.reloadPage();\n        // this.router.navigate(['/home']);\n      }, err => {\n        this.errorMessage = err.error.message;\n        this.isLoginFailed = true;\n      });\n    }\n    reloadPage() {\n      window.location.reload();\n    }\n    navigateToResetPassword() {\n      // Navegar a la página de restablecimiento de contraseña\n      this.router.navigate(['/reset-password']);\n    }\n  }\n  _class = LoginComponent;\n  _class.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TokenStorageService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-login\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"col-md-12\"], [1, \"card\", \"card-container\"], [\"title\", \"image\", \"id\", \"profile-img\", \"src\", \"./assets/LOGOSHALOM.jpg\", 1, \"profile-img-card\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [\"class\", \"alert alert-success\", 4, \"ngIf\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"placeholder\", \"Ingrese el Nombre de Usuario\", \"type\", \"text\", \"formControlName\", \"username\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", \"role\", \"alert\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"formControlName\", \"password\", 3, \"type\"], [3, \"click\"], [\"for\", \"role\"], [\"title\", \"role\", \"formControlName\", \"role\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"], [\"class\", \"form-group\", 4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\"], [3, \"ngValue\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-success\"], [1, \"lead\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵtemplate(3, LoginComponent_form_3_Template, 26, 8, \"form\", 3);\n        i0.ɵɵtemplate(4, LoginComponent_div_4_Template, 4, 2, \"div\", 4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@fadeInOut\", undefined);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"label[_ngcontent-%COMP%]{display:block;margin-top:10px}.card-container.card[_ngcontent-%COMP%]{max-width:400px!important;padding:40px}.card[_ngcontent-%COMP%]{background-color:#f7f7f7;padding:20px 25px 30px;margin:50px auto 25px;border-radius:2px;box-shadow:0 2px 2px #0000004d}.profile-img-card[_ngcontent-%COMP%]{width:96px;height:96px;margin:0 auto 10px;display:block;border-radius:50%}\"],\n    data: {\n      animation: [trigger('fadeInOut', [transition(':enter', [style({\n        opacity: 0\n      }), animate('500ms ease-out', style({\n        opacity: 1\n      }))]), transition(':leave', [animate('500ms ease-out', style({\n        opacity: 0\n      }))])])]\n    }\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}