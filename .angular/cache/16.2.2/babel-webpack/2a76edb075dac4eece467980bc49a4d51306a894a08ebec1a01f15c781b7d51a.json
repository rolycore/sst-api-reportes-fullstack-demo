{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(authService, tokenStorage, fb, router) {\n    this.authService = authService;\n    this.tokenStorage = tokenStorage;\n    this.fb = fb;\n    this.router = router;\n    this.isLoggedIn = false;\n    this.isLoginFailed = false;\n    this.errorMessage = '';\n    this.roles = ['ROLE_ADMIN', 'ROLE_MODERATOR', 'ROLE_USER'];\n    this.selectedRole = ''; // Variable para almacenar el rol seleccionado\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      role: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n    }\n    const {\n      username,\n      password\n    } = this.loginForm.value;\n    this.selectedRole = this.loginForm.get('role')?.value; // Actualizar selectedRole con el valor del campo role\n    this.authService.login(username, password).subscribe(data => {\n      this.isLoggedIn = true;\n      this.isLoginFailed = false;\n      this.errorMessage = '';\n      this.tokenStorage.saveToken(data.accessToken);\n      this.tokenStorage.saveUser(data);\n      this.reloadPage();\n    }, err => {\n      this.errorMessage = err.error.message;\n      this.isLoginFailed = true;\n    });\n  }\n  reloadPage() {\n    window.location.reload();\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}