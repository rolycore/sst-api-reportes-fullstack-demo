{"ast":null,"code":"import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/token-storage.service\";\nconst TOKEN_HEADER_KEY = 'Authorization'; // for Spring Boot back-end\n// const TOKEN_HEADER_KEY = 'x-access-token';   // for Node.js Express back-end\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  var _class;\n  class AuthInterceptor {\n    constructor(token) {\n      this.token = token;\n    }\n    intercept(req, next) {\n      let authReq = req;\n      const token = this.token.getToken();\n      if (token != null) {\n        // for Spring Boot back-end\n        authReq = req.clone({\n          headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token)\n        });\n        // for Node.js Express back-end\n        // authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, token) });\n      }\n\n      return next.handle(authReq);\n    }\n  }\n  _class = AuthInterceptor;\n  _class.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.TokenStorageService));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return AuthInterceptor;\n})();\nexport const authInterceptorProviders = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n  multi: true\n}];","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}