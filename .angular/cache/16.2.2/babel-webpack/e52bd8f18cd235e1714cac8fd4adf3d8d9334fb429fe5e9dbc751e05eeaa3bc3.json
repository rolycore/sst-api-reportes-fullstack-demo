{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport swal from 'sweetalert2';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let ReportetecnicoService = /*#__PURE__*/(() => {\n  var _class;\n  class ReportetecnicoService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.baseUrl = 'http://62.72.24.222:8080/api/v1/reporte-tecnico';\n      this.httpHeaders = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n    }\n    //Metodo para los errores y execepciones\n    handleError(error) {\n      console.error(error);\n      swal.fire(error.mensaje, error.error, 'error');\n      return throwError(error);\n    }\n    //Listar todos los reportes\n    listAll() {\n      return this.http.get(this.baseUrl).pipe(catchError(this.handleError));\n    }\n    //Listar Por ID\n    listById(id) {\n      const url = `${this.baseUrl}/${id}`;\n      return this.http.get(url).pipe(catchError(this.handleError));\n    }\n    //Crear Reporte\n    create(reporteTecnico) {\n      return this.http.post(this.baseUrl, reporteTecnico).pipe(catchError(this.handleError));\n    }\n    //Actualizar Reporte\n    update(reporteTecnico) {\n      return this.http.put(`${this.baseUrl}/${reporteTecnico.idreptec}`, reporteTecnico, {\n        headers: this.httpHeaders\n      }).pipe(catchError(e => {\n        if (e.status == 400) {\n          return throwError(e);\n        }\n        this.router.navigate(['/reportetecnico']);\n        console.error(e.error.mensaje);\n        Swal.fire(e.error.mensaje, e.error.error, 'error');\n        return throwError(e);\n      }));\n    }\n    //Eliminar Reporte\n    deleteById(id) {\n      const url = `${this.baseUrl}/${id}`;\n      return this.http.delete(url).pipe(catchError(this.handleError));\n    }\n    //Imprimir Reporte\n    exportPdf(reporteTecnico) {\n      const url = `${this.baseUrl}/export-pdf-reporte-tecnico`;\n      return this.http.get(url, {\n        responseType: 'blob'\n      }).pipe(catchError(this.handleError));\n    }\n    generateReport(reportId) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/pdf'\n      });\n      const params = new HttpParams().set('reportId', reportId.toString());\n      return this.http.get(`http://62.72.24.222:8080/api/v1/reporte-tecnico/generate`, {\n        responseType: 'blob',\n        headers,\n        params,\n        observe: 'response'\n      });\n    }\n  }\n  _class = ReportetecnicoService;\n  _class.ɵfac = function ReportetecnicoService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return ReportetecnicoService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}